datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

model User {
  id    String @id @default(cuid())
  email String @unique
  name  String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  rsvp Rsvp?

  role Role @default(USER)
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Rsvp {
  id         String   @id @default(cuid())

  name       String
  guests     Int

  attendance Boolean

  camping    Boolean
  diet       String?
  remarks    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String? @unique
}

model Payment {
  id         String   @id @default(cuid())

  tickets   Ticket[]
  total     Decimal @db.Money
  paid      Boolean @default(false)

  stripePaymentId String?
}

model Ticket {
  id         String   @id @default(cuid())

  name       String
  amount     Decimal @db.Money

  payment    Payment  @relation(fields: [paymentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  paymentId  String

  discount   Discount? @relation(fields: [discountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  discountId String?
}

model Discount {
  id         String   @id @default(cuid())

  name       String
  amount     Decimal @db.Money
  code       String   @unique
  used       Boolean  @default(false)
  singleUse  Boolean  @default(false)

  tickets    Ticket[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
